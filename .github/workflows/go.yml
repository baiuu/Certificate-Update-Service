name: Go Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        run: |
          BINARY_NAME=Certificate-Update-Service
          ALLINSSL_NAME=Certificate-Allinssl
          EXT=""
          [ "${{ matrix.goos }}" = "windows" ] && EXT=".exe"

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o ${BINARY_NAME}${EXT}
          zip ${BINARY_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}.zip ${BINARY_NAME}${EXT}

          cd Certificate-Allinssl
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o ${ALLINSSL_NAME}${EXT}
          zip ${ALLINSSL_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}.zip ${ALLINSSL_NAME}${EXT}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            *.zip
            Certificate-Allinssl/*.zip
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          merge-multiple: true
          path: ./binaries

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            binaries/*.zip
            binaries/Certificate-Allinssl/*.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
